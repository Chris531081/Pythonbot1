@client.command(name='play', pass_context=True)
async def play(ctx, url):
    if (ctx.author.voice):
        channel = ctx.message.author.voice.channel
        await channel.connect()

        server = ctx.message.guild
        voice_channel = server.voice_client

        async with ctx.typing():
            player = await YTDLSource.from_url(url, loop=client.loop)
            voice_channel.play(player, after=lambda e: print('Player error: %s' % e) if e else None)

        await ctx.send('**Now playing:** {}'.format(player.title))
    else:
        await ctx.send("Bro je zit niet in een voice channel")


@client.command(pass_context=True)
async def leave(ctx):
    if (ctx.voice_client):
        await ctx.guild.voice_client.disconnect()
        await ctx.send("Ciao")
    else:
        await ctx.send("Heb je een bril nodig ofzo ik zit niet in een channel")




@bot.event
async def on_message(message):
    if "..." in message.content:
        await message.channel.send("reactie op bericht")

























    with open("users.json") as fp:
        users = json.load(fp)
except Exception:
    users = {}

def save_users():
    with open("users.json", "w+") as fp:
        json.dump(users, fp, sort_keys=True, indent=4)

def add_points(user: discord.User, points: int):
    id = user.id
    if id not in users:
        users[id] = {}
    users[id]["points"] = users[id].get("points", 0) + points
    print("{} now has {} points".format(user.name, users[id]["points"]))
    save_users()

def get_points(user: discord.User):
    id = user.id
    if id in users:
        return users[id].get("points", 0)
    return 0

@client.event
async def on_message(message):
    if message.author == client.user:
        return
    print("{} sent a message".format(message.author.name))
    if message.content.lower().startswith("!lvl"):
        msg = "You have {} points!".format(get_points(message.author))
        await client.process_commands(message.channel, msg)
    add_points(message.author, 1)















    @bot.command(name='play', pass_context=True)
async def play(ctx, url):
    if (ctx.author.voice):
        channel = ctx.message.author.voice.channel
        await channel.connect()

        server = ctx.message.guild
        voice_channel = server.voice_client

        async with ctx.typing():
            player = await YTDLSource.from_url(url, loop=bot.loop)
            voice_channel.play(player, after=lambda e: print('Player error: %s' % e) if e else None)

        await ctx.send('**Now playing:** {}'.format(player.title))
    else:
        await ctx.send("Bro je zit niet in een voice channel")

        # -----------------------het afspelen van muziek van youtube en joinen van de vc----------------------------


@bot.command(pass_context=True)
async def leave(ctx):
    if (ctx.voice_client):
        await ctx.guild.voice_client.disconnect()
        await ctx.send("Ciao")
    else:
        await ctx.send("Heb je een bril nodig ofzo ik zit niet in een channel")






        @bot.command(name= crawl)
        async def crawl():
            if message.author == bot.user:
                return

            if message.content.startswith(f'$hello'):
                await message.channel.send('Hello there! I\'m the bad robot you fart face.')

            if f'$search' in message.content:

                key_words, search_words = mal.key_words_search_words(message.content)
                result_links = mal.search(key_words)
                links = mal.send_link(result_links, search_words)

                if len(links) > 0:
                    for link in links:
                        await message.channel.send(link)
                else:
                    await message.channel.send("sorry bro ik kon hem niet vinden")




                       @bot.command(name='pfp')
    async def pfp(ctx, *, member: discord.Member = None):
        embed = discord.Embed(color=0xfcd743)
        embed.set_author(name=ctx.author.name + "#" + ctx.author.discriminator, icon_url=ctx.author.avatar_url)
        embed.set_image(url=ctx.author.avatar_url)

        await ctx.send(embed=embed)

        else if not Member:
        embed = discord.Embed(color=0xfcd743)
            Member = ctx.message.author
        userAvatar = Member.avatar_url
        await ctx.send(userAvatar, embed=embed)


         @bot.command(name='pfp')
        embed = discord.Embed(color=0xfcd743)
        embed.set_author(name=ctx.author.name + "#" + ctx.author.discriminator, icon_url=ctx.author.avatar_url)
        embed.set_image(url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

         @bot.command(name='pfp')
    async def pfp(ctx, *, Member: discord.Member = None):
        if not Member:
            Member = ctx.message.author
        userAvatar = Member.avatar_url
        await ctx.send(userAvatar)
        await ctx.send(embed=embed)

        ___________________________________________________________________________________________


        import discord
from discord.ext import commands, tasks
from discord.ext.commands import Bot
from datetime import datetime
import random
from random import choice
import discord.utils

intents = discord.Intents.default()
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)

status = ['Ballin', 'Met je gevoelens', 'Huilen']


@bot.event
async def on_ready():
    change_status.start()
    print('Bot is online!')
    print('---------------------')

    @bot.command(name='rules')
    async def rules(member):
        channel = discord.utils.get(member.guild.channels, name='rules')
        embed = discord.Embed(color=0xf5e66f)
        embed.add_field(name="Regels", value="de regels zijn simpel.", inline=False)
        embed.add_field(name="‏‏‎ ‎", value="→ Geen oorlogs misdaden verrichten.", inline=False)
        embed.add_field(name="‏‏‎ ‎", value="→ Gebruik de kanalen alleen voor hun taak en niet voor andere dingen",
                        inline=False)
        embed.add_field(name="‏‏‎ ‎", value="→ Cyberpesten is toegestaan", inline=False)
        embed.add_field(name="‏‏‎ ‎", value="→ Niet spammen lol", inline=False)
        embed.set_image(url='https://media.giphy.com/media/j0kP7fOkKQlYsXTO2r/giphy.gif')
        embed.set_footer(text="reageer met een geel hartje op dit bericht om toegelaten te worden")
        await channel.send(embed=embed)

        # --------------------------------Regels command--------------------------------------------------------

    @bot.event
    async def on_raw_reaction_add(payload):
        message_id = payload.message_id
        if message_id == 853336175447506974:
            guild_id = payload.guild_id
            guild = discord.utils.find(lambda g: g.id == guild_id, bot.guilds)

            role = None
            if payload.emoji.name == '💛':
                role = discord.utils.get(guild.roles, name='Certified MulaBGaming Member')

            if role is not None:
                member = payload.member
                if member is not None:
                    await member.add_roles(role)
                    print("Alles is gelukt")
                else:
                    print("Serverlid niet gevonden")

            else:
                print("Rol bestaat niet")

    @bot.event
    async def on_raw_reaction_remove(payload):
        message_id = payload.message_id

        if message_id == 853336175447506974:
            guild_id = payload.guild_id
            guild = discord.utils.find(lambda g: g.id == guild_id, bot.guilds)

            if payload.emoji.name == '💛':
                role = discord.utils.get(guild.roles, name='Certified MulaBGaming Member')

            if role is not None:
                member = discord.utils.find(lambda m: m.id == payload.user_id, guild.members)
                if member is not None:
                    await member.remove_roles(role)
                    print("Alles is gelukt")
                else:
                    print("Serverlid niet gevonden")
            else:
                print("Rol niet gevonden")

                # ----------------------rollen geven(werkt) en verwijderen(werkt nu ook)---------------------

    determine_flip = [1, 0]

    @bot.command(name='flip')
    async def coinflip(ctx):
        if random.choice(determine_flip) == 1:
            embed = discord.Embed(title="Kop of Munt",
                                  description=f"{ctx.author.mention} De munt is geflipped je hebt **Kop**!",
                                  color=0xfcd743)
            await ctx.send(embed=embed)

        else:
            embed = discord.Embed(title="Kop of Munt",
                                  description=f"{ctx.author.mention} De munt is geflipped je hebt **Munt**!",
                                  color=0xfcd743)
            await ctx.send(embed=embed)

            # ------------------------------kop of munt------------------------------------------------

    @bot.command(name='pfp', aliases=['icon', 'p', 'pf'])
    async def pfp(ctx, *, Member: discord.Member = None):
        if not Member:
            embed = discord.Embed(color=0xfcd743)
            embed.set_author(name=ctx.author.name + "#" + ctx.author.discriminator, icon_url=ctx.author.avatar_url)
            embed.set_image(url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
        else:
            userAvatar = Member.avatar_url
            embed = discord.Embed(color=0xfcd743)
            embed.set_author(name=ctx.author.name + "#" + ctx.author.discriminator, icon_url=ctx.author.avatar_url)
            embed.set_image(url=userAvatar)
            await ctx.send(embed=embed)

            # -----------------------------stuurt de pfp van de author of een member------------------------------------

            @bot.event
            async def on_member_join(member):
                channel = discord.utils.get(member.guild.channels, name='announcements')
                await channel.send(f'Yow {member.mention} welkom in de server')

    @bot.event
    async def on_member_remove(member):
        channel = discord.utils.get(member.guild.channels, name='announcements')
        await channel.send(f'Ik heb je toch niet nodig voor de HAVO {member.mention}')

        # -------------------welkom en goodbye tot ziens------------------------------------------------

        # -------------------------het leaven van de voice channel-----------------------------------------------

        # ------------------------- placeholer text voor het level systeem-------------------------------

    # ------------------------------------level system---------------------------------------------------------------
    @bot.command()
    async def greet(ctx, user: discord.User = None):
        if not user:
            await ctx.send("Hello generic!")
        else:
            await ctx.send("Hello {}!".format(user))
    # ---------------------------------------afk functie---------------------------------------------------------


@tasks.loop(seconds=20)
async def change_status():
    await bot.change_presence(activity=discord.Game(choice(status)))

    # -----------------------------------------random status ---------------------------------------------------









    @bot.event
async def on_message(message):
    if message.author == client.user:
        return
        # lower case message
    message_content = message.content.lower()

    if message.content.startswith(f'$hello'):
        await message.channel.send(hello_message)

    if f'!anime' in message_content:

        key_words, search_words = AniS.key_words_search_words(message_content)
        result_links = AniS.search(key_words)
        links = AniS.send_link(result_links, search_words)

        if len(links) > 0:
            for link in links:
                await message.channel.send(link)
        else:
            await message.channel.send("no results")

    elif f'!manga' in message_content:

        key_words, search_words = ManS.key_words_search_words(message_content)
        result_links = ManS.search(key_words)
        links = ManS.send_link(result_links, search_words)

    if len(links) > 0:
        for link in links:
            await message.channel.send(link)

    else:
        await message.channel.send("no results")